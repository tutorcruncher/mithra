log_format custom '$remote_addr request="$request" status=$status time=${request_time}s '
                  'request_size=$request_length response_size=$body_bytes_sent '
                  'referrer="$http_referer"';
access_log /dev/stdout custom;

upstream app_server {
  # fail_timeout=0 means we always retry an upstream event if it failed
  # to return a good HTTP response
  # for a TCP configuration
  server web:8000 fail_timeout=0;
}

server {
  listen 80 default_server;

  client_max_body_size 1G;

  keepalive_timeout 5;

  location /api/ {
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_http_version 1.1;
    proxy_set_header Connection "upgrade";
    proxy_redirect off;

    # 30 will mean websocket connections disconnect,
    # this is intentional, ws clients should be resilient enough to reconnect
    # less than in prod to easier testing
    proxy_send_timeout 30;
    proxy_read_timeout 30;
    proxy_connect_timeout 3;

    proxy_pass http://app_server;
  }

  location /pgweb/ {
    access_log off;
    rewrite /pgweb(/.*) $1 break;
    proxy_pass http://pgweb;
  }

  location / {
    alias /js-src/;
    try_files $uri /index.html =404;
  }
}
